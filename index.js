// Require the necessary packages to run the program
var inquirer = require("inquirer");
var fs = require("fs");
var axios = require("axios");

// Initialize function run run the main part of the program
function init() {
    // Run inquirer to get input from the user
    inquirer
        .prompt([
            // Ask for github username
            {
                type: "input",
                message: "What is your Github username?",
                name: "github"
            },
            // Ask for project title
            {
                type: "input",
                message: "What is the title of this repo?",
                name: "title"
            },
            // Ask for project description
            {
                type: "input",
                message: "What is a good description for this repo?",
                name: "description"
            },
            // Ask for an installation process
            {
                type: "input",
                message: "Describe the installation process.",
                name: "installation"
            },
            // Ask for an explination of how to use the program
            {
                type: "input",
                message: "How does someone use this repo?",
                name: "usage"
            },
            // Ask the user for what license is being used
            {
                type: "list",
                message: "What license is being used?",
                name: "license",
                choices: [
                    "MIT",
                    "GPLv3",
                    "AGPL",
                    "None"
                ]
            },
            // Ask the user who are the contributors
            {
                type: "input",
                message: "Who are the contributors (seperated by cammas without spaces)?",
                name: "contributors"
            },
            // Adk the user about testing
            {
                type: "input",
                message: "How does the user run tests?",
                name: "tests"
            }
        ])
        // Once the prompt is complete
        .then(function(data) {
            // Create a query url based on the user's github username
            const queryUrl = `https://api.github.com/users/${data.github}/events/public`;
            // Make an axios api call
            axios.get(queryUrl)
                // Then add the response email and avatar pic to the prompt return
                .then(function(response) {
                    data.email = response.data[0].payload.commits[0].author.email;
                    data.avatar = response.data[0].actor.avatar_url;
                    return data
                })
                // Then destructure the response and build out the readme data
                .then(function({title, description, installation, usage, license, contributors, tests, email, avatar}){

                    // Split up contributors on commas and then join then on breaks
                    var contributorsArray = contributors.split(',');
                    var contributorsText = contributorsArray.join('<br>')

                    // Check for the license
                    var licenseText;
                    if (license === 'MIT'){
                        licenseText = `[![MIT License](https://img.shields.io/apm/l/atomic-design-ui.svg?)](https://github.com/tterb/atomic-design-ui/blob/master/LICENSEs)`
                    }
                    else if (license === 'GPLv3'){
                        licenseText = `[![GPLv3 License](https://img.shields.io/badge/License-GPL%20v3-yellow.svg)](https://opensource.org/licenses/)`
                    }
                    else if (license === 'AGPL'){
                        licenseText = `[![AGPL License](https://img.shields.io/badge/license-AGPL-blue.svg)](http://www.gnu.org/licenses/agpl-3.0)`
                    }
                    else {
                        licenseText = `This project does not use any license.`
                    }

                    var inputData = `# ${title}\n## Description\n${description}\n## Table of Contents\n[Installation](#installation)<br>\n[Usage](#uage)<br>\n[License](#license)<br>\n[Contributors](#contributors)<br>\n[Testing](#testing)\n## Installation\n${installation}\n## Usage\n${usage}\n## License\n${licenseText}\n## Contributors\n${contributorsText}\n## Testing\n${tests}\n### This readme was generated by:\n <br> ![alt text](${avatar}) <br> ${email}`
                    // Call the write to file function
                    writeToFile("generated-readme.md", inputData)
                })

            
        });
}

function writeToFile(fileName, data) {
    // write all the data to the file
    fs.writeFile(fileName, data, function(err) {

        if (err) {
          return console.log(err);
        }
      
        console.log("Success!");
      
      });
      
}

init();
